generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model connections {
  id                                 BigInt             @id @default(autoincrement())
  created_at                         DateTime           @default(now()) @db.Timestamptz(6)
  sender_id                          BigInt
  target_id                          BigInt?
  status                             connection_status?
  users_connections_sender_idTousers users              @relation("connections_sender_idTousers", fields: [sender_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_connections_target_idTousers users?             @relation("connections_target_idTousers", fields: [target_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id                                       BigInt        @id @default(autoincrement())
  email                                    String        @unique
  password                                 String
  created_at                               DateTime      @default(now()) @db.Timestamptz(6)
  experience_years                         Int?          @db.SmallInt
  gender                                   String?
  age                                      Int?          @db.SmallInt
  avatar_url                               String?
  bio                                      String?
  skills                                   String[]
  hobbies                                  String[]
  website_url                              String?
  connections_connections_sender_idTousers connections[] @relation("connections_sender_idTousers")
  connections_connections_target_idTousers connections[] @relation("connections_target_idTousers")
}

enum connection_status {
  ignored
  interested
  accepted
  rejected
}
